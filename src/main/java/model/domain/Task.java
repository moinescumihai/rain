package model.domain;import javax.persistence.*;@Entity@Table(name = "task", schema = "", catalog = "raindrop")public class Task extends BaseEntity {    private long idTask;    private String cod;    private String nume;    private String descriere;    private int complet;    private int deleted;    private int ordine;    private Persoana reporter;    private Persoana assignee;    private Proiect idProiect;    private long estimare;    private StatusTask idStatusTask;    @Id    @GeneratedValue(strategy = GenerationType.IDENTITY)    @Column(name = "id_task")    public long getIdTask() {        return idTask;    }    public void setIdTask(long idTask) {        this.idTask = idTask;    }    @Basic    @Column(name = "nume", nullable = false, insertable = true, updatable = true)    public String getNume() {        return nume;    }    public void setNume(String nume) {        this.nume = nume;    }    @Basic    @Column(name = "descriere", nullable = false, insertable = true, updatable = true)    public String getDescriere() {        return descriere;    }    public void setDescriere(String descriere) {        this.descriere = descriere;    }    @Basic    @Column(name = "complet", nullable = false, insertable = true, updatable = true)    public int getComplet() {        return complet;    }    public void setComplet(int complet) {        this.complet = complet;    }    @Basic    @Column(name = "deleted", nullable = false, insertable = true, updatable = true)    public int getDeleted() {        return deleted;    }    public void setDeleted(int deleted) {        this.deleted = deleted;    }    @ManyToOne(fetch = FetchType.EAGER)    @JoinColumn(name = "id_assignee")    public Persoana getAssignee() {        return assignee;    }    public void setAssignee(Persoana assignee) {        this.assignee = assignee;    }    @ManyToOne(fetch = FetchType.EAGER)    @JoinColumn(name = "id_proiect")    public Proiect getIdProiect() {        return idProiect;    }    public void setIdProiect(Proiect idProiect) {        this.idProiect = idProiect;    }    @Basic    @Column(name = "estimare", nullable = false, insertable = true, updatable = true)    public long getEstimare() {        return estimare;    }    public void setEstimare(long estimare) {        this.estimare = estimare;    }    @ManyToOne(fetch = FetchType.EAGER)    @JoinColumn(name = "id_status_task")    public StatusTask getIdStatusTask() {        return idStatusTask;    }    public void setIdStatusTask(StatusTask idStatusTask) {        this.idStatusTask = idStatusTask;    }    @Basic    @Column(name = "ordine", nullable = false, insertable = true, updatable = true)    public int getOrdine() {        return ordine;    }    public void setOrdine(int ordine) {        this.ordine = ordine;    }    @Basic    @Column(name = "cod", nullable = false, insertable = true, updatable = true)    public String getCod() {        return cod;    }    public void setCod(String cod) {        this.cod = cod;    }    @ManyToOne(fetch = FetchType.EAGER)    @JoinColumn(name = "id_reporter")    public Persoana getReporter() {        return reporter;    }    public void setReporter(Persoana reporter) {        this.reporter = reporter;    }}