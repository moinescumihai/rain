package model.common;public class TreeFile implements Comparable<TreeFile> {    private long id;    private String name;    private long level;    private String url;    private long size;    public TreeFile() {    }    public TreeFile(long id, String name, long level, String url) {        this.id = id;        this.name = name;        this.level = level;        this.url = url;    }    public TreeFile(long id, String name, String url) {        this.id = id;        this.name = name;        this.url = url;    }    public TreeFile(long id, String name, String url, Long size) {        this.id = id;        this.name = name;        this.url = url;        this.size = size;    }    @Override    public int compareTo(TreeFile that) {        return this.name.compareTo(that.name);    }    public long getId() {        return id;    }    public void setId(long id) {        this.id = id;    }    public String getName() {        return name;    }    public void setName(String name) {        this.name = name;    }    public long getLevel() {        return level;    }    public void setLevel(long level) {        this.level = level;    }    public String getUrl() {        return url;    }    public void setUrl(String url) {        this.url = url;    }    public long getSize() {        return size;    }    public void setSize(long size) {        this.size = size;    }    @Override    public boolean equals(Object o) {        if (this == o) return true;        if (!(o instanceof TreeFile)) return false;        TreeFile treeFile = (TreeFile) o;        if (id != treeFile.id) return false;        if (level != treeFile.level) return false;        if (size != treeFile.size) return false;        if (name != null ? !name.equals(treeFile.name) : treeFile.name != null) return false;        return !(url != null ? !url.equals(treeFile.url) : treeFile.url != null);    }    @Override    public int hashCode() {        int result = (int) (id ^ (id >>> 32));        result = 31 * result + (name != null ? name.hashCode() : 0);        result = 31 * result + (int) (level ^ (level >>> 32));        result = 31 * result + (url != null ? url.hashCode() : 0);        result = 31 * result + (int) (size ^ (size >>> 32));        return result;    }}