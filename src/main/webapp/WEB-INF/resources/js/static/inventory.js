var iesireAlreadyAdded = [];var intrareAlreadyAdded = [];var ENTER_KEY = 13;var removeStocForm = $('#modal-removeStoc-form');var addStocForm = $('#modal-addStoc-form');var editStocForm = $('#modal-edit-stoc-form');var addCategoryForm = $('#modal-addCategory-form');var addTypeForm = $('#modal-addType-form');var addPlaceForm = $('#modal-addPlace-form');var iesireForm = $('#modal-iesire-form');var intrareForm = $('#modal-intrare-form');var latitude = EMPTY;var longitude = EMPTY;var numeLoc = EMPTY;var IESIRE = 'iesire';var INTRARE = 'intrare';var getArticolByCode = function (code) {    var articol = {};    $.ajax({        type: 'get',        url: '/app/secure/inventory/articol-by-code/' + code,        contentType: "application/json",        async: false,        success: function (response) {            articol = response;        },        error: function (e) {            showNotification("Eroare. Re&icirc;nc&abreve;rca&#539;i pagina." + e.message, "Eroare", DANGER);        }    });    return articol;};var resetIesire = function () {    $('#iesire-form-choose-scan').removeClass('hidden');    $('#iesire-form-list-articole').empty().addClass('hidden');    $('#iesire-form-scan-manual-wrapper').addClass('hidden');    $('#iesire-schimba-scanare').addClass('hidden');    $('#iesire-form-detalii').val(EMPTY);    $('.chosen-select').val(EMPTY).trigger(chosenUpdated);    $('a[href="#iesire-detalii"]').tab('show');    iesireAlreadyAdded.splice(0);};var resetIntrare = function () {    $('#intrare-form-choose-scan').removeClass('hidden');    $('#intrare-form-list-articole').empty().addClass('hidden');    $('#intrare-form-scan-manual-wrapper').addClass('hidden');    $('#intrare-schimba-scanare').addClass('hidden');    $('#intrare-form-detalii').val(EMPTY);    $('.chosen-select').val(EMPTY).trigger(chosenUpdated);    $('a[href="#intrare-detalii"]').tab('show');    intrareAlreadyAdded.splice(0);};var populateEditArticolFor = function (idArticol) {    startSpinner();    var articol = {};    $.ajax({        type: 'get',        url: '/app/secure/inventory/articol/' + idArticol,        contentType: "application/json",        success: function (response) {            articol = response;        },        complete: function () {            var modal = $('#modal-edit-stoc');            var image = getImageForStoc(idArticol);            $('#editStoc-form-idImagine').val(image.idAttachment);            $('#editStoc-form-idStoc').val(articol.idStoc);            $('#editStoc-form-numeStoc').val(articol.numeStoc);            $('#editStoc-form-idLoc').val(articol.idLoc.idLoc);            $('#editStoc-form-idCategorieStoc').val(articol.idCategorieStoc.idCategorieStoc);            getTypes('editStoc-form-idGrupStoc', 'editStoc-form-idCategorieStoc');            $('#editStoc-form-idGrupStoc').val(articol.idGrupStoc.idGrupStoc);            $('#editStoc-form-idResurseUmane').val(articol.idResurseUmane.idResurseUmane);            $('#editStoc-form-idStare').val(articol.idStare.idStare);            $('#preview-image-file-update').prop('src', '/files/' + image.fileName).prop('width', 200).css('height', 'auto');            $('.chosen-select').trigger(chosenUpdated);            modal.find('.custom-modal-title').html('<i class="fa fa-barcode"></i>   ' + articol.codStoc);            stopSpinner();        },        error: function (e) {            showNotification("Eroare. Re&icirc;nc&abreve;rca&#539;i pagina." + e.message, "Eroare", DANGER);        }    });};var getPersoane = function (container) {    var persoaneSelect = $('#' + container);    persoaneSelect.html(EMPTY);    persoaneSelect.append("<option></option>");    $.ajax({        type: 'get',        url: '/app/secure/inventory/getpersoane',        contentType: "application/json",        success: function (response) {            $.each(response, function (index, persoana) {                persoaneSelect.append($("<option>").val(persoana.idResurseUmane).text(persoana.prenume + ' ' + persoana.nume));            });            persoaneSelect.trigger(chosenUpdated);        },        error: function (e) {            showNotification("Eroare. Re&icirc;nc&abreve;rca&#539;i pagina." + e.message, "Eroare", DANGER);        }    });};var getStari = function (container) {    var stariSelect = $('#' + container);    stariSelect.html(EMPTY);    stariSelect.append("<option></option>");    $.ajax({        type: 'get',        url: '/app/secure/inventory/getstari',        contentType: "application/json",        success: function (response) {            $.each(response, function (index, stare) {                stariSelect.append($("<option>").val(stare.idStare).text(stare.numeStare));            });            stariSelect.trigger(chosenUpdated);        },        error: function (e) {            showNotification("Eroare. Re&icirc;nc&abreve;rca&#539;i pagina." + e.message, "Eroare", DANGER);        }    });};var getCategories = function (container) {    var categoriesSelect = $('#' + container);    categoriesSelect.html(EMPTY);    categoriesSelect.append("<option></option>");    $.ajax({        type: 'get',        url: '/app/secure/inventory/getcategories',        contentType: "application/json",        success: function (response) {            $.each(response, function (index, category) {                categoriesSelect.append($("<option>").val(category.idCategorieStoc).text(category.numeCategorie));            });            categoriesSelect.trigger(chosenUpdated);        },        error: function (e) {            showNotification("Eroare. Re&icirc;nc&abreve;rca&#539;i pagina." + e.message, "Eroare", DANGER);        }    });};var getTypes = function (container, categoryContainer) {    var typesSelect = $('#' + container);    var selectedCategory = $('#' + categoryContainer).val();    typesSelect.html(EMPTY);    typesSelect.append("<option></option>");    $.ajax({        type: 'get',        url: '/app/secure/inventory/gettypes/' + selectedCategory,        contentType: "application/json",        async: false,        success: function (response) {            $.each(response, function (index, type) {                typesSelect.append($("<option>").val(type.idGrupStoc).text(type.numeGrup));            });            typesSelect.trigger(chosenUpdated);        },        error: function (e) {            showNotification("Eroare. Re&icirc;nc&abreve;rca&#539;i pagina." + e.message, "Eroare", DANGER);        }    });};var getPlaces = function (container) {    var placesSelect = $('#' + container);    placesSelect.html(EMPTY);    placesSelect.append("<option></option>");    $.ajax({        type: 'get',        url: '/app/secure/inventory/getplaces',        contentType: "application/json",        success: function (response) {            $.each(response, function (index, place) {                placesSelect.append($("<option>").val(place.idLoc).text(place.numeLoc));            });            placesSelect.trigger(chosenUpdated);        },        error: function (e) {            showNotification("Eroare. Re&icirc;nc&abreve;rca&#539;i pagina." + e.message, "Eroare", DANGER);        }    });};var imageIsLoaded = function (e) {    $('.image_preview').css("display", "block");    var previewing = $('.previewing');    previewing.prop('src', e.target.result);    previewing.css('max-width', '250px');    previewing.css('max-height', '230px');};var generateBarcode = function (barcode) {    var token = $("meta[name='_csrf']").prop("content");    var header = $("meta[name='_csrf_header']").prop("content");    $.ajax({        type: 'get',        url: '/app/secure/inventory/generatebarcode/' + barcode,        cache: false,        async: false,        beforeSend: function (xhr) {            xhr.setRequestHeader(header, token);        },        error: function () {            showNotification('Eroare.  Re&icirc;nc&abreve;rca&#539;i pagina!', 'Eroare', WARNING);        }    });};var getTranzactie = function (idArticol) {    var tranzactie = ZERO;    var token = $("meta[name='_csrf']").prop("content");    var header = $("meta[name='_csrf_header']").prop("content");    $.ajax({        type: 'get',        async: false,        url: '/app/secure/inventory/tranzactie/' + idArticol,        contentType: "application/json",        beforeSend: function (xhr) {            xhr.setRequestHeader(header, token);        },        success: function (response) {            if (response) {                tranzactie = response;            }        },        error: function (e) {            showNotification('Eroare.  Re&icirc;nc&abreve;rca&#539;i pagina.', 'Eroare', WARNING);        }    });    return tranzactie;};var generateHistoryTable = function (idArticol) {    var counter;    var data;    var creatDe;    var persoana;    var stare;    var loc;    var idLoc;    var colet;    var idStare;    var idStareAnterioara;    var detalii;    var history = getHistory(idArticol);    var stareIcon;    var stareAnterioaraIcon;    var historyTable = '<div class="wrapper">' +        '<table class="table table-responsive table-hover"><thead><tr class="text-table-head">' +        '<td></td><td>Atribuit lui</td><td>Atribuit &#238;n</td><td>Stare</td><td>Detalii</td><td>Atribuit de</td><td>Atribuit la</td>' +        '</tr></thead><tbody>';    if (history) {        $.each(history, function (index, historyItem) {            counter = index + 1;            data = toJSDateTime(historyItem.dataTranzactie);            creatDe = historyItem.creatDe;            persoana = historyItem.idResurseUmane.nume;            loc = historyItem.idLoc.numeLoc;            idLoc = historyItem.idLoc.idLoc;            stare = historyItem.idStare.numeStare;            idStare = historyItem.idStare.idStare;            detalii = historyItem.detalii;            colet = historyItem.idColet.numeColet;            stareIcon = getStareIcon(idStare);            stareAnterioaraIcon = getStareIcon(idStareAnterioara);            historyTable += '<tr class="map-popup-marker-activator">' +                '<td>' + counter + '.</td>' +                '<td><nobr>' + persoana + '</nobr></td>' +                '<td><nobr><a class="map-popup-marker" data-load="idLoc=' + idLoc + '">' + loc + '</a></nobr></td>' +                '<td><nobr><span class="fa ' + stareIcon + ' fa-fw fa-bold">&nbsp;&nbsp;</span>' + stare + '</nobr></td>' +                '<td><nobr>' + detalii + '</nobr></td>' +                '<td><nobr>' + creatDe + '</nobr></td>' +                '<td><nobr>' + data + '</nobr></td></tr>';        });    } else {        showNotification("Eroare.  Re&icirc;nc&abreve;rca&#539;i pagina", "Eroare", WARNING);        return;    }    historyTable += '</tbody></table></div>';    return historyTable;};var getHistory = function (idArticol) {    var retVal = null;    var token = $("meta[name='_csrf']").prop("content");    var header = $("meta[name='_csrf_header']").prop("content");    $.ajax({        type: 'get',        url: '/app/secure/inventory/tranzactie/history/' + idArticol,        async: false,        contentType: "application/json",        mimeType: 'application/json',        dataType: 'json',        beforeSend: function (xhr) {            xhr.setRequestHeader(header, token);        },        success: function (response) {            retVal = response        },        error: function () {            showNotification('Eroare.  Re&icirc;nc&abreve;rca&#539;i pagina.', 'Eroare', WARNING);        }    });    return retVal;};var getStareIcon = function (idStare) {    var stareIcon;    switch (idStare) {        case 1:            stareIcon = 'fa-cubes';            break;        case 2:            stareIcon = 'fa-recycle';            break;        case 3:            stareIcon = 'fa-thumb-tack';            break;        case 4:            stareIcon = 'fa-truck';            break;        case 5:            stareIcon = 'fa-bug';            break;        case 6:            stareIcon = 'fa-wrench';            break;        case 7:            stareIcon = 'fa-exclamtion-circle';            break;        case 8:            stareIcon = 'fa-trash';            break;    }    return stareIcon;};var getImageForStoc = function (idStoc) {    var token = $("meta[name='_csrf']").prop("content");    var header = $("meta[name='_csrf_header']").prop("content");    var image;    $.ajax({        type: 'get',        url: '/app/secure/files/get-inventory-image/' + idStoc,        beforeSend: function (xhr) {            xhr.setRequestHeader(header, token);        },        dataType: 'json',        contentType: 'application/json',        mimeType: 'application/json',        async: false,        success: function (response) {            image = response;        }    });    return image;};var format = function (row) {    var usePersoana = false;    var useUserRecuperare = false;    var primitPrinTranzit;    var barcode = row.codStoc;    var loc = row.idLoc.numeLoc;    var idLoc = row.idLoc.idLoc;    var idStoc = row.idStoc;    var persoana = row.idResurseUmane.fullName || EMPTY;    var idStare = row.idStare.idStare;    var stare = row.idStare.numeStare;    var stareIcon = getStareIcon(idStare);    var dateAdaugare = toJSDateTime(row.creatLa);    var dateModificare = toJSDateTime(row.modificatLa);    var dateModificareTitlu = 'Recovered at:';    var lastHistory = getTranzactie(row.idStoc);    var detalii = lastHistory.detalii;    var useHistoryDate = true;    var historyDate = toJSDateTime(lastHistory.dataTranzactie);    var historyDateTitlu;    var detaliiTitle;    var useDetalii = true;    var userRecuperare = row.modificatDe;    var image = getImageForStoc(idStoc);    generateBarcode(barcode);    switch (idStare) {        case 1:            detaliiTitle = 'Detalii adaugare';            useUserRecuperare = false;            break;        case 2:            detaliiTitle = 'Detalii recuperare';            historyDateTitlu = 'Recuperat la';            useUserRecuperare = true;            break;        case 3:            historyDateTitlu = 'Atribuit la';            usePersoana = true;            detaliiTitle = 'Detalii atribuire';            break;        case 4:            usePersoana = true;            detaliiTitle = 'Detalii tranzit';            ////dataPrimire = d.dataPrimire;            //if (dataPrimire) {            //    dataPrimire = toJSDate(dataPrimire, 1);            //    if (dataPrimire < dateAdaugare) {            //        dataPrimire = null;            //        usePrimire = false;            //    }            //}            //if (dataPrimire) {            //    usePrimire = true;            //    dataPrimire = toJSDate(dataPrimire, 1)            //} else {            //    dataPrimire = '&#206;nc&#259; nu a ajuns la destina&#355;ie';            //}            break;        case 5 :            break;        case 6 :            break;        case 7 :            break;        case 8 :            break;        default:            return;    }    var retString = $('#formatTemplate').html();    retString = chain(retString).replace(/\$loc\$/g, loc)        .replace(/\$idLoc\$/g, idLoc)        .replace(/\$barcode\$/g, barcode)        .replace(/\$image.fileName\$/g, image.fileName)        .replace(/\$stare\$/g, stare)        .replace(/\$stareIcon\$/g, stareIcon)        .replace(/\$dateAdaugare\$/g, dateAdaugare)        .replace(/\$historyDateTitlu\$/g, historyDateTitlu)        .replace(/\$historyDate\$/g, historyDate)        .replace(/\$usePersoana\$/g, usePersoana)        .replace(/\$persoana\$/g, persoana)        .replace(/\$useUserRecuperare\$/g, useUserRecuperare)        .replace(/\$userRecuperare\$/g, userRecuperare)        .replace(/\$detaliiTitle\$/g, detaliiTitle)        .replace(/\$detalii\$/g, detalii)        .replace(/\$idStoc\$/g, idStoc);    return retString;};var initializeMap = function (latitude, longitude) {    var markerLocation = new google.maps.LatLng(latitude, longitude);    var mapOptions = {        center: markerLocation,        zoom: 15    };    var marker = new google.maps.Marker({        position: markerLocation,        title: "Localizare"    });    var map = new google.maps.Map(document.getElementById("map-canvas-container"), mapOptions);    marker.setMap(map);};var focusIesireInputs = function () {    var inputScanManual = $('#iesire-form-scan-manual-wrapper');    if (inputScanManual.hasClass('hidden')) {        $('#iesire-form-scan').focus();    } else {        $('#iesire-form-scan-manual').focus();    }};var focusIntrareInputs = function () {    var inputScanManual = $('#intrare-form-scan-manual-wrapper');    if (inputScanManual.hasClass('hidden')) {        $('#intrare-form-scan').focus();    } else {        $('#intrare-form-scan-manual').focus();    }};var generateArticoleListForIesire = function (code, articoleContainer, iesireIntrare) {    var articol;    var idArticol;    var stareArticol;    var articolItem = '<div class="alert articol alert-dismissible" role="alert">' +        '<button id="$delButton-' + iesireIntrare + '-del" type="button" class="close" data-dismiss="alert" aria-label="&#350;terge">' +        '<span aria-hidden="true">&times;</span>' +        '</button>' +        '<strong>$numeArticol</strong> <span class="label label-default pull-right">$detaliiArticol</span>' +        '</div>';    articol = getArticolByCode(code);    if (articol) {        idArticol = articol.idStoc;        stareArticol = articol.idStare.idStare;        switch (stareArticol) {            case 0:                showNotification('Articolul nu a fost g&abreve;sit &icirc;n inventar!<br>Ad&abreve;ugati articolul &icirc;n inventar &#x219;i &icirc;ncerca&#539;i din nou.', "Aten&#539;ie", WARNING);                break;            case 1:            case 2:                if ($.inArray(idArticol, iesireAlreadyAdded) === -1) {                    articoleContainer.append(chain(articolItem).replace('$numeArticol', articol.numeStoc).replace('$detaliiArticol', articol.codStoc).replace('$delButton', idArticol));                    iesireAlreadyAdded.push(idArticol);                } else {                    showNotification('Articolul este deja &icirc;n list&abreve;', 'Info', INFO);                }                break;            case 3:                showNotification('Articolul este deja alocat!<br>Dac&#259; aceast&#259; situa&#539;ie nu corespunde cu realitatea, recupera&#539;i articolul &#x219;i &icirc;ncerca&#539;i din nou', 'Info', INFO);                break;            case 4:                showNotification('Articolul este &icirc;n tranzit!<br>Dac&#259; aceast&#259; situa&#539;ie nu corespunde cu realitatea, edita&#539;i articolul &#x219;i &icirc;ncerca&#539;i din nou', 'Info', INFO);                break;            case 5:                showNotification('Articolul nu poate fi procesat!<br>Este deteriorat.', "Aten&#539;ie", WARNING);                break;            case 6:                showNotification('Articolul nu poate fi procesat!<br>Este &icirc;n service.', "Aten&#539;ie", WARNING);                break;            case 7:                showNotification('Articolul nu poate fi procesat!<br>Este disp&abreve;rut.', "Aten&#539;ie", WARNING);                break;            case 8:                showNotification('Articolul nu poate fi procesat!<br>Este casat.', "Aten&#539;ie", WARNING);                break;        }    } else {        showNotification('Articolul nu a fost g&abreve;sit!', 'Aten&#539;ie', WARNING);    }};var generateArticoleListForIntrare = function (code, articoleContainer, iesireIntrare) {    var articol;    var idArticol;    var stareArticol;    var articolItem = '<div class="alert articol alert-dismissible" role="alert">' +        '<button id="$delButton-' + iesireIntrare + '-del" type="button" class="close" data-dismiss="alert" aria-label="&#350;terge">' +        '<span aria-hidden="true">&times;</span>' +        '</button>' +        '<strong>$numeArticol</strong> <span class="label label-default pull-right">$detaliiArticol</span>' +        '</div>';    articol = getArticolByCode(code);    if (articol) {        idArticol = articol.idStoc;        stareArticol = articol.idStare.idStare;        switch (stareArticol) {            case 0:                showNotification('Articolul nu a fost g&abreve;sit &icirc;n inventar!<br>Ad&abreve;ugati articolul &icirc;n inventar &#x219;i &icirc;ncerca&#539;i din nou.', "Aten&#539;ie", WARNING);                break;            case 1:            case 2:                showNotification('Articolul este deja &icirc;n inventar!<br>Dac&#259; aceast&#259; situa&#539;ie nu corespunde cu realitatea, edita&#539;i articolul &#x219;i &icirc;ncerca&#539;i din nou', 'Info', INFO);                break;            case 3:                if ($.inArray(idArticol, intrareAlreadyAdded) === -1) {                    articoleContainer.append(chain(articolItem).replace('$numeArticol', articol.numeStoc).replace('$detaliiArticol', articol.codStoc).replace('$delButton', idArticol));                    intrareAlreadyAdded.push(idArticol);                } else {                    showNotification('Articolul este deja &icirc;n list&abreve;', 'Info', INFO);                }                break;            case 4:                showNotification('Articolul este &icirc;n tranzit!<br>Dac&#259; aceast&#259; situa&#539;ie nu corespunde cu realitatea, edita&#539;i articolul &#x219;i &icirc;ncerca&#539;i din nou', 'Info', INFO);                break;            case 5:                showNotification('Articolul nu poate fi procesat!<br>Este deteriorat.', "Aten&#539;ie", WARNING);                break;            case 6:                showNotification('Articolul nu poate fi procesat!<br>Este &icirc;n service.', "Aten&#539;ie", WARNING);                break;            case 7:                showNotification('Articolul nu poate fi procesat!<br>Este disp&abreve;rut.', "Aten&#539;ie", WARNING);                break;            case 8:                showNotification('Articolul nu poate fi procesat!<br>Este casat.', "Aten&#539;ie", WARNING);                break;        }    } else {        showNotification('Articolul nu a fost g&abreve;sit!', 'Aten&#539;ie', WARNING);    }};$(document).ready(function () {    var inventoryTable;    $('#inventory').addClass('active');    try {        inventoryTable = $('#inventory-table').DataTable({            "ajax": {                "url": '/app/secure/inventory/getinventory',                "dataSrc": ""            },            "buttons": [                {                    extend: 'excel',                    text: '<span class="fa fa-file-excel-o" title="Apasa ALT+X pentru a salva tabelul in format Excel">&nbsp;&nbsp;</span><span>XLS</span>',                    className: 'btn btn-default',                    key: {                        key: 'x'                    },                    exportOptions: {                        columns: ':visible'                    }                }, {                    extend: 'pdf',                    text: '<span class="fa fa-file-pdf-o" title="Apasa ALT+F pentru a salva tabelul in format PDF">&nbsp;&nbsp;</span><span>PDF</span>',                    className: 'btn btn-default',                    key: {                        key: 'f'                    },                    orientation: 'landscape',                    title: 'Inventar',                    exportOptions: {                        columns: ':visible'                    }                }, {                    extend: 'print',                    text: '<span class="fa fa-print" title="Apasa ALT+P pentru a trimite la print">&nbsp;&nbsp;</span><span>Print</span>',                    className: 'btn btn-default',                    key: {                        key: 'p'                    },                    title: 'Inventar',                    exportOptions: {                        columns: ':visible'                    }                },                {                    extend: 'colvis',                    text: '<span class="fa fa-adjust">&nbsp;&nbsp;</span><span>Alege coloane vizibile</span>',                    className: 'btn btn-default'                }            ],            "columns": [                {                    "sWidth": "35px",                    "bSortable": false,                    "orderable": false,                    "className": 'details-control',                    "data": null,                    "defaultContent": EMPTY,                    "searchable": false                },                {                    "data": "numeStoc",                    "className": 'text-bold'                },                {"data": "idCategorieStoc.numeCategorie"},                {"data": "idGrupStoc.numeGrup"},                {"data": "codStoc"},                {"data": "detalii"},                {                    "data": "idLoc.numeLoc",                    "visible": true,                    "searchable": true                },                {                    "data": "idResurseUmane.fullName",                    "visible": true,                    "searchable": true                },                {                    "data": "creatLa",                    "visible": true,                    "searchable": true                },                {                    "sWidth": "45px",                    "className": 'text-center',                    "data": "idStare.idStare"                }            ],            "columnDefs": [                {                    "targets": [0],                    "visible": true,                    "searchable": false,                    "bSortable": false,                    "orderable": false                },                {                    "targets": [6],                    "bUseRendered": true,                    "visible": true,                    "fnCreatedCell": function (nTd, sData, oData, i) {                        $(nTd).parent().addClass('map-popup-marker-activator');                        $(nTd).html('<a class="map-popup-marker" data-load="idLoc=' + oData.idLoc.idLoc + '">' + oData.idLoc.numeLoc + '</a>');                    }                },                {                    "targets": [8],                    "bUseRendered": true,                    "visible": true,                    "render": function (data, type, row) {                        if (data) {                            return generateFormattedDate(new Date(data));                        } else {                            return EMPTY;                        }                    }                },                {                    "targets": [9],                    "bUseRendered": true,                    "visible": true,                    "render": function (data, type, row) {                        if (data) {                            return row.idStare.numeStare                        } else {                            return EMPTY;                        }                    },                    "fnCreatedCell": function (nTd, sData, oData, i) {                        var stare = oData.idStare.numeStare;                        switch (sData) {                            case 1:                                $(nTd).html('<div class="btn btn-success stare-icon" data-toggle="tooltip" data-placement="bottom" title="' + stare + '"><span class="fa fa-cubes fa-fw"></span></div>');                                break;                            case 2:                                $(nTd).html('<div class="btn btn-success stare-icon" data-toggle="tooltip" data-placement="bottom" title="' + stare + '"><span class="fa fa-recycle fa-fw"></span></div>');                                break;                            case 3:                                $(nTd).html('<div class="btn btn-primary stare-icon" data-toggle="tooltip" data-placement="bottom" title="' + stare + '"><span class="fa fa-thumb-tack fa-fw"></span></div>');                                break;                            case 4:                                $(nTd).html('<div class="btn btn-warning stare-icon" data-toggle="tooltip" data-placement="bottom" title="' + stare + '"><span class="fa fa-truck fa-fw"></span></div>');                                break;                            case 5:                                $(nTd).html('<div class="btn btn-danger stare-icon" data-toggle="tooltip" data-placement="bottom" title="' + stare + '"><span class="fa fa-bug fa-fw"></span></div>');                                break;                            case 6:                                $(nTd).html('<div class="btn btn-danger stare-icon" data-toggle="tooltip" data-placement="bottom" title="' + stare + '"><span class="fa fa-wrench fa-fw"></span></div>');                                break;                            case 7:                                $(nTd).html('<div class="btn btn-danger stare-icon" data-toggle="tooltip" data-placement="bottom" title="' + stare + '"><span class="fa fa-exclamation-triangle fa-fw"></span></div>');                                break;                            case 8:                                $(nTd).html('<div class="btn btn-danger stare-icon" data-toggle="tooltip" data-placement="bottom" title="' + stare + '"><span class="fa fa-trash fa-fw"></span></div>');                                break;                        }                    }                }            ],            dom: '<"clear"><"break-row"><"pull-right"B>lrtip<"break-row-lg">'        });        $('#inventory-table').find('tbody').on('click', 'td.details-control, div.stare-icon', function () {            var tr = $(this).closest('tr');            var row = inventoryTable.row(tr);            if (row.child.isShown()) {                // This row is already open - close it                row.child.hide();                tr.removeClass('shown');            }            else {                // Open this row                row.child(format(row.data())).show();                tr.addClass('shown');            }        });    } catch (err) {        console.log(err);    }    getStari('editStoc-form-idStare');    getPersoane('editStoc-form-idResurseUmane');    getCategories('addCategory-form-categorie-parinte');    getCategories('addStoc-form-idCategorieStoc');    getCategories('editStoc-form-idCategorieStoc');    getCategories('addType-form-idCategorieStoc');    getPlaces('addStoc-form-idLoc');    getPlaces('editStoc-form-idLoc');    $(document).on('keyup', "#inventory-search", function () {        inventoryTable.search(this.value).draw();    });    editStocForm.validate({        rules: {            required: true,            numeStoc: {                minlength: 5            }        }    });    editStocForm.on('submit', function (e) {        if (!$(this).valid()) {            return;        }        var token = $("meta[name='_csrf']").prop("content");        var header = $("meta[name='_csrf_header']").prop("content");        var idStoc = $('#editStoc-form-idStoc').val();        var numeStoc = $('#editStoc-form-numeStoc').val();        var idLoc = $('#editStoc-form-idLoc').val();        var idCategorieStoc = $('#editStoc-form-idCategorieStoc').val();        var idGrupStoc = $('#editStoc-form-idGrupStoc').val();        var detalii = $('#editStoc-form-detalii').val();        var idResurseUmane = $('#editStoc-form-idResurseUmane').val();        var idStare = $('#editStoc-form-idStare').val();        var idImagine = $('#editStoc-form-idImagine').val();        var data = {            "idStoc": idStoc,            "numeStoc": numeStoc, "idLoc": idLoc,            "detalii": detalii, "idGrupStoc": idGrupStoc,            "idCategorieStoc": idCategorieStoc,            "idResurseUmane": idResurseUmane, "idStare": idStare        };        var idStocEdited;        var formData;        $.ajax({            type: 'post',            url: $(this).prop('action'),            beforeSend: function (xhr) {                xhr.setRequestHeader(header, token);            },            dataType: 'json',            contentType: 'application/json',            mimeType: 'application/json',            async: false,            data: JSON.stringify(data),            success: function (response) {                if (response.errorsMap != null) {                    $('.form-error').html(EMPTY);                    for (var key in response.errorsMap) {                        var err = "<span class=\"text-danger small form-error\" id=\"" + key + "Id\">" + response.errorsMap[key] + "</span>";                        $("[id^='" + key + "-error']").html(err);                    }                } else {                    if (idImagine !== 0) {                        idStocEdited = response.id;                        formData = new FormData();                        var image = $('#image-file-update')[0].files[0];                        formData.append("imageFile", image);                        $.ajax({                            type: 'post',                            url: '/app/secure/files/upload-inventory-image/' + idStocEdited,                            beforeSend: function (xhr) {                                xhr.setRequestHeader(header, token);                            },                            data: formData,                            contentType: false,                            cache: false,                            processData: false,                            error: function () {                                showNotification("Eroare uploading item image. Please try again later.", "Eroare", DANGER);                            }                        });                    }                    $('#modal-edit-stoc').modal('hide');                    editStocForm.trigger('reset');                    $('.chosen-select').trigger(chosenUpdated);                    showNotification(response.message, 'Success', SUCCESS);                    inventoryTable.ajax.reload(null, false);                }            },            error: function () {                showNotification("Eroare. Re&icirc;nc&abreve;rca&#539;i pagina.", "Eroare", DANGER);            }        });        e.preventDefault();    });    addStocForm.validate({        rules: {            required: true,            numeStoc: {                minlength: 5            }        }    });    addStocForm.on('submit', function (e) {        if (!$(this).valid()) {            return;        }        var token = $("meta[name='_csrf']").prop("content");        var header = $("meta[name='_csrf_header']").prop("content");        var numeStoc = $('#addStoc-form-numeStoc').val();        var idLoc = $('#addStoc-form-idLoc').val();        var idCategorieStoc = $('#addStoc-form-idCategorieStoc').val();        var idGrupStoc = $('#addStoc-form-idGrupStoc').val();        var detalii = $('#addStoc-form-detalii').val();        var data = {            "numeStoc": numeStoc, "idLoc": idLoc,            "detalii": detalii, "idGrupStoc": idGrupStoc,            "idCategorieStoc": idCategorieStoc        };        var idStocAdded;        var formData;        $.ajax({            type: 'post',            url: $(this).prop('action'),            beforeSend: function (xhr) {                xhr.setRequestHeader(header, token);            },            dataType: 'json',            contentType: 'application/json',            mimeType: 'application/json',            data: JSON.stringify(data),            success: function (response) {                if (response.errorsMap != null) {                    $('.form-error').html(EMPTY);                    for (var key in response.errorsMap) {                        var err = "<span class=\"text-danger small form-error\" id=\"" + key + "Id\">" + response.errorsMap[key] + "</span>";                        $("[id^='" + key + "-error']").html(err);                    }                } else {                    idStocAdded = response.id;                    formData = new FormData();                    var image = $('#image-file')[0].files[0];                    formData.append("imageFile", image);                    $.ajax({                        type: 'post',                        url: '/app/secure/files/upload-inventory-image/' + idStocAdded,                        beforeSend: function (xhr) {                            xhr.setRequestHeader(header, token);                        },                        data: formData,                        contentType: false,                        cache: false,                        processData: false,                        error: function () {                            showNotification("Eroare uploading item image. Please try again later.", "Eroare", DANGER);                        }                    });                    $('#modal-addStoc').modal('hide');                    addStocForm.trigger('reset');                    $('.chosen-select').trigger(chosenUpdated);                    showNotification(response.message, 'Success', SUCCESS);                    inventoryTable.ajax.reload(null, false);                }            },            error: function () {                showNotification("Eroare. Re&icirc;nc&abreve;rca&#539;i pagina.", "Eroare", DANGER);            }        });        e.preventDefault();    });    addCategoryForm.validate({        rules: {            required: true,            nume: {                minlength: 3            },            codCategorie: {                required: true,                number: true            }        }    });    addCategoryForm.on('submit', function (e) {        if (!$(this).valid()) {            return;        }        var token = $("meta[name='_csrf']").prop("content");        var header = $("meta[name='_csrf_header']").prop("content");        var nume = $('#addCategory-form-nume').val();        var idCategorieParinte = $('#addCategory-form-categorie-parinte').val();        var codCategorie = $('#addCategory-form-codCategorie').val();        var data = {            "numeCategorie": nume,            "codCategorie": codCategorie,            "idCategorieParinte": idCategorieParinte        };        $.ajax({            type: 'post',            url: $(this).prop('action'),            beforeSend: function (xhr) {                xhr.setRequestHeader(header, token);            },            dataType: 'json',            contentType: 'application/json',            mimeType: 'application/json',            data: JSON.stringify(data),            success: function (response) {                addCategoryForm.trigger('reset');                $('#modal-addCategory').modal('hide');                getCategories('addCategory-form-categorie-parinte');                getCategories('addStoc-form-idCategorieStoc');                getCategories('editStoc-form-idCategorieStoc');                getCategories('addType-form-idCategorieStoc');                showNotification(response.message, 'Success', SUCCESS);            },            error: function () {                showNotification("Eroare. Re&icirc;nc&abreve;rca&#539;i pagina.", "Eroare", ERROR);            }        });        e.preventDefault();    });    addTypeForm.validate({        rules: {            required: true,            numeGrup: {                minlength: 3            }        }    });    addTypeForm.on('submit', function (e) {        if (!$(this).valid()) {            return;        }        var token = $("meta[name='_csrf']").prop("content");        var header = $("meta[name='_csrf_header']").prop("content");        var nume = $('#addType-form-numeGrup').val();        var codGrup = $('#addType-form-codGrup').val();        var idCategorieParinte = $('#addType-form-idCategorieStoc').val();        var data = {            "numeGrup": nume,            "codGrup": codGrup,            "idCategorieStoc": idCategorieParinte        };        $.ajax({            type: 'post',            url: $(this).prop('action'),            beforeSend: function (xhr) {                xhr.setRequestHeader(header, token);            },            dataType: 'json',            contentType: 'application/json',            mimeType: 'application/json',            data: JSON.stringify(data),            success: function (response) {                addTypeForm.trigger('reset');                $('#modal-addType').modal('hide');                getTypes('addStoc-form-idGrupStoc', 'addStoc-form-idCategorieStoc');                getTypes('editStoc-form-idGrupStoc', 'editStoc-form-idCategorieStoc');                showNotification(response.message, 'Success', SUCCESS);            },            error: function () {                showNotification("Eroare. Re&icirc;nc&abreve;rca&#539;i pagina.", "Eroare", ERROR);            }        });        e.preventDefault();    });    addPlaceForm.validate({        rules: {            numeLoc: {                required: true,                minlength: 3            },            longitudine: {                required: true            },            latitudine: {                required: true            }        }    });    addPlaceForm.on('submit', function (e) {        if (!$(this).valid()) {            return;        }        var token = $("meta[name='_csrf']").prop("content");        var header = $("meta[name='_csrf_header']").prop("content");        var nume = $('#addPlace-form-numeLoc').val();        var latitudine = $('#addPlace-form-latitudine').val();        var longitudine = $('#addPlace-form-longitudine').val();        var data = {            "numeLoc": nume,            "latitude": latitudine,            "longitude": longitudine        };        $.ajax({            type: 'post',            url: $(this).prop('action'),            beforeSend: function (xhr) {                xhr.setRequestHeader(header, token);            },            dataType: 'json',            contentType: 'application/json',            mimeType: 'application/json',            data: JSON.stringify(data),            success: function (response) {                $('#addPlace-form-numeLoc').val(EMPTY);                $('#modal-addPlace').modal('hide');                getPlaces('addStoc-form-idLoc');                getPlaces('editStoc-form-idLoc');                showNotification(response.message, 'Success', SUCCESS);            },            error: function () {                showNotification("Eroare. Re&icirc;nc&abreve;rca&#539;i pagina.", "Eroare", ERROR);            }        });        e.preventDefault();    });    iesireForm.validate({        rules: {            idLoc: {                required: true            },            idResurseUmane: {                required: true            },            tipIesire: {                required: true            },            detalii: {                required: true            }        }    });    iesireForm.on('submit', function (event) {        if (!$(this).valid()) {            $('a[href="#iesire-detalii"]').tab('show');            return;        }        var scanTab = $('a[href="#iesire-scaneaza"]');        var token = $("meta[name='_csrf']").prop("content");        var header = $("meta[name='_csrf_header']").prop("content");        var articole = [].concat(iesireAlreadyAdded);        if (articole.length === 0) {            if (scanTab.closest('li').hasClass('active')) {                showNotification("Nu ai scanat niciun articol.", "Aten&#539;ie", WARNING);            } else {                scanTab.tab('show');            }            return false;        }        var idLoc = $('#iesire-form-idLoc').val();        var idResurseUmane = $('#iesire-form-idResurseUmane').val();        var tipIesire = $('#iesire-form-tip-iesire').val();        var detalii = $('#iesire-form-detalii').val();        var data = {            "idLoc": idLoc,            "idResurseUmane": idResurseUmane,            "tipIesire": tipIesire,            "articole": articole,            "detalii": detalii        };        $.ajax({            type: 'post',            url: $(this).prop('action'),            beforeSend: function (xhr) {                xhr.setRequestHeader(header, token);            },            dataType: 'json',            contentType: 'application/json',            mimeType: 'application/json',            data: JSON.stringify(data),            success: function (response) {                $('#modal-iesire').modal('hide');                showNotification(response.message, 'Success', SUCCESS);                resetIesire();                inventoryTable.ajax.reload(null, false);            },            error: function () {                showNotification("Eroare. Re&icirc;nc&abreve;rca&#539;i pagina.", "Eroare", ERROR);            }        });        event.preventDefault();    });    intrareForm.validate({        rules: {            idLoc: {                required: true            },            detalii: {                required: true            }        }    });    intrareForm.on('submit', function (event) {        if (!$(this).valid()) {            $('a[href="#intrare-detalii"]').tab('show');            return;        }        var token = $("meta[name='_csrf']").prop("content");        var header = $("meta[name='_csrf_header']").prop("content");        var scanTab = $('a[href="#intrare-scaneaza"]');        var articole = [].concat(intrareAlreadyAdded);        if (articole.length === 0) {            if (scanTab.closest('li').hasClass('active')) {                showNotification("Nu ai scanat niciun articol.", "Aten&#539;ie", WARNING);            } else {                scanTab.tab('show');            }            return false;        }        var idLoc = $('#intrare-form-idLoc').val();        var detalii = $('#intrare-form-detalii').val();        var data = {            "idLoc": idLoc,            "articole": articole,            "detalii": detalii        };        $.ajax({            type: 'post',            url: $(this).prop('action'),            beforeSend: function (xhr) {                xhr.setRequestHeader(header, token);            },            dataType: 'json',            contentType: 'application/json',            mimeType: 'application/json',            data: JSON.stringify(data),            success: function (response) {                $('#modal-intrare').modal('hide');                showNotification(response.message, 'Success', SUCCESS);                resetIntrare();                inventoryTable.ajax.reload(null, false);            },            error: function () {                showNotification("Eroare. Re&icirc;nc&abreve;rca&#539;i pagina.", "Eroare", ERROR);            }        });        event.preventDefault();    });    removeStocForm.on('submit', function (e) {        var idStoc = $('#id-stoc-to-remove').val();        var token = $("meta[name='_csrf']").prop("content");        var header = $("meta[name='_csrf_header']").prop("content");        if (idStoc) {            $.ajax({                type: 'get',                url: $(this).prop('action') + '/' + idStoc,                beforeSend: function (xhr) {                    xhr.setRequestHeader(header, token);                },                dataType: 'json',                contentType: 'application/json',                mimeType: 'application/json',                success: function (response) {                    $('#id-stoc-to-remove').val(EMPTY);                    $('#modal-removeStoc').modal('hide');                    showNotification(response.message, 'Success', SUCCESS);                    inventoryTable.ajax.reload(null, false);                },                error: function () {                    showNotification("Eroare. Re&icirc;nc&abreve;rca&#539;i pagina.", "Eroare", ERROR);                }            });        }        e.preventDefault();    });    $(document).on('click', function (event) {        if ($('#modal-iesire').hasClass('in') && $('#iesire-form-scan-manual-wrapper').hasClass('hidden') && $('#iesire-form-choose-scan').hasClass('hidden')) {            $('#iesire-form-scan').focus();        }    });    $(document).on('mouseover', '.map-popup-marker-activator', function () {        $(this).find('a.map-popup-marker').webuiPopover($.extend({}, popoverDefaultSettings, {                    type: 'html',//content type, values:'html','iframe','async'                    url: EMPTY,//if not empty ,plugin will load content by url                    title: EMPTY,//the popover title ,if title is set to empty string,title bar will auto hide                    trigger: 'hover',                    constrains: 'auto',                    width: '550',//can be set with  number                    height: '400',//can be set with  number                    delay: {//show and hide delay time of the popover, works only when trigger is 'hover',the value can be number or object                        show: null,                        hide: 50                    },                    cache: false,//if cache is set to false,popover will destroy and recreate                    multi: false,//allow other popovers in page at same time                    closeable: false,                    content: function (e) {                        var retValue = EMPTY;                        var data = $($(this)[0]).data('load').split('=');                        var idLoc = data[1];                        var token = $("meta[name='_csrf']").prop("content");                        var header = $("meta[name='_csrf_header']").prop("content");                        $.ajax({                            type: 'get',                            url: '/app/secure/inventory/loc/' + idLoc,                            beforeSend: function (xhr) {                                xhr.setRequestHeader(header, token);                            },                            dataType: 'json',                            contentType: 'application/json',                            mimeType: 'application/json',                            async: false,                            success: function (response) {                                latitude = response.latitude;                                longitude = response.longitude;                                numeLoc = response.numeLoc;                                retValue = '<div class="loc-popover"><div><b>' + numeLoc + '<b></div><div id="map-canvas-container"></div></div>';                            },                            error: function () {                                showNotification("Eroare.  Re&icirc;nc&abreve;rca&#539;i pagina.", "Eroare", WARNING);                            }                        });                        return retValue;                    }                }            )        );    });    $(document).on('change', '#addStoc-form-idCategorieStoc', function () {        getTypes('addStoc-form-idGrupStoc', 'addStoc-form-idCategorieStoc');    });    $(document).on('change', '#editStoc-form-idCategorieStoc', function () {        getTypes('editStoc-form-idGrupStoc', 'editStoc-form-idCategorieStoc');    });    $(document).on('click', 'a[id^="history-"]', function () {        var id = $(this).prop('id');        var idArticol = id.replace('history-', EMPTY);        var barcode = $(this).data('barcode');        id = id + '-modal';        var titlu = '<i class="fa fa-history">&nbsp;&nbsp;</i>Istoric pentru&nbsp;&nbsp;<i class="fa fa-barcode">&nbsp;</i>' + barcode;        var tabel = generateHistoryTable(idArticol);        showModal(id, titlu, tabel);    });    $(document).on('click', 'a[id^="editare-articol-"]', function (event) {        var modal = $('#modal-edit-stoc');        var button = $(event.target);        var idArticol = button.data('idarticol');        populateEditArticolFor(idArticol);        modal.modal('show');        event.preventDefault();    });    $(document).on('click', '#button-iesire-schimba-scanare', function (event) {        $('#iesire-form-scan-manual-wrapper').toggleClass('hidden');        focusIesireInputs();        event.preventDefault();    });    $(document).on('click', '#button-intrare-schimba-scanare', function (event) {        $('#intrare-form-scan-manual-wrapper').toggleClass('hidden');        focusIntrareInputs();        event.preventDefault();    });    $(document).on('click', 'button[id$="-iesire-del"]', function (event) {        var idStocDel = parseInt($(this).prop('id'));        iesireAlreadyAdded.remove(idStocDel);        focusIesireInputs();        event.preventDefault();    });    $(document).on('click', 'button[id$="-intrare-del"]', function (event) {        var idStocDel = parseInt($(this).prop('id'));        intrareAlreadyAdded.remove(idStocDel);        focusIntrareInputs();        event.preventDefault();    });    $(document).on('keypress', 'form', function (event) {        return event.keyCode != ENTER_KEY;    });    $(document).on('keyup', '#iesire-form-scan', function (event) {        var keyCode = event.keyCode ? event.keyCode : event.which;        var code;        var articoleContainer = $('#iesire-form-list-articole');        // if key that was pressed is the Enter key        if (keyCode === ENTER_KEY) {            event.preventDefault();            event.stopPropagation();            code = $(this).val();            $(this).val(EMPTY);            if (code === EMPTY) {                return false;            }            generateArticoleListForIesire(code, articoleContainer, IESIRE);        }    });    $(document).on('click', '#button-scanare-iesire-refresh', function () {        var code;        var articoleContainer = $('#iesire-form-list-articole');        // if key that was pressed is the Enter key        code = $('#iesire-form-scan-manual').val();        $(this).val(EMPTY);        if (code === EMPTY) {            return false;        }        generateArticoleListForIesire(code, articoleContainer, IESIRE);    });    $(document).on('keyup', '#intrare-form-scan', function (event) {        var keyCode = event.keyCode ? event.keyCode : event.which;        var code;        var articoleContainer = $('#intrare-form-list-articole');        // if key that was pressed is the Enter key        if (keyCode === ENTER_KEY) {            event.preventDefault();            event.stopPropagation();            code = $(this).val();            $(this).val(EMPTY);            if (code === EMPTY) {                return false;            }            generateArticoleListForIntrare(code, articoleContainer, INTRARE);        }    });    $(document).on('click', '#button-scanare-intrare-refresh', function () {        var code;        var articoleContainer = $('#intrare-form-list-articole');        // if key that was pressed is the Enter key        code = $('#intrare-form-scan-manual').val();        $(this).val(EMPTY);        if (code === EMPTY) {            return false;        }        generateArticoleListForIntrare(code, articoleContainer, INTRARE);    });    $(document).on('click', '#intrare-button-scanare', function (event) {        $('#intrare-form-scan').focus();        $('#intrare-form-choose-scan').addClass('hidden');        $('#intrare-form-list-articole').removeClass('hidden');        $('#intrare-schimba-scanare').removeClass('hidden');        event.preventDefault();    });    $(document).on('click', '#intrare-button-scanare-manuala', function (event) {        $('#intrare-form-choose-scan').addClass('hidden');        $('#intrare-form-list-articole').removeClass('hidden');        $('#intrare-form-scan-manual-wrapper').removeClass('hidden');        $('#intrare-schimba-scanare').removeClass('hidden');        $('#intrare-form-scan-manual').focus();        event.preventDefault();    });    $(document).on('click', '#iesire-button-scanare', function (event) {        $('#iesire-form-scan').focus();        $('#iesire-form-choose-scan').addClass('hidden');        $('#iesire-form-list-articole').removeClass('hidden');        $('#iesire-schimba-scanare').removeClass('hidden');        event.preventDefault();    });    $(document).on('click', '#iesire-button-scanare-manuala', function (event) {        $('#iesire-form-choose-scan').addClass('hidden');        $('#iesire-form-list-articole').removeClass('hidden');        $('#iesire-form-scan-manual-wrapper').removeClass('hidden');        $('#iesire-schimba-scanare').removeClass('hidden');        $('#iesire-form-scan-manual').focus();        event.preventDefault();    });    $(document).on('shown.bs.modal', '#modal-iesire', function () {        getPersoane('iesire-form-idResurseUmane');        getPlaces('iesire-form-idLoc');    });    $(document).on('hidden.bs.modal', '#modal-iesire', function () {        resetIesire();    });    $(document).on('shown.bs.modal', '#modal-intrare', function () {        getPlaces('intrare-form-idLoc');    });    $(document).on('hidden.bs.modal', '#modal-intrare', function () {        resetIntrare();    });    $(document).on('click', '#removeStoc-open', function (e) {        var rowData = inventoryTable.row('.selected').data();        if (rowData) {            $('.stoc-nume-delete').text(rowData.numeStoc);            $('#id-stoc-to-remove').val(rowData.idStoc);            $('#modal-removeStoc').modal('show');        } else {            showNotification("Selecteaz&abreve; un r&acirc;nd mai &icirc;nt&acirc;i", 'Aten&#539;ie', WARNING);        }    });    $(document).on('change', '#image-file-update', function () {        $('#editStoc-form-idImagine').val(0);    });    $(".img-selector").on('change', function () {        var imgSelector = $(this);        imgSelector.find('.image-message').empty(); // To remove the previous error message        var file = this.files[0];        var imagefile = file.type;        var match = ["image/jpeg", "image/png", "image/jpg", "image/gif"];        if (!((imagefile == match[0]) || (imagefile == match[1]) || (imagefile == match[2]) || (imagefile == match[3]))) {            imgSelector.closest('.previewing').prop('src', '../img/noimageplaceholder.png');            imgSelector.closest('.image-message').html("<div class='well-sm bg-infobox text-left'><h4 class='text-danger'><i class='fa fa-exclamation-circle'></i>&nbsp;Fisierul ales nu este o imagine</h4>"                + "<span class='error_message'>Numai fisierele de tipul .jpeg, .jpg, .png and .gif sunt acceptate</span></div>");            return false;        }        else {            var reader = new FileReader();            reader.onload = imageIsLoaded;            reader.readAsDataURL(this.files[0]);        }    });});$(window).load(function () {    $('#location-picker').locationpicker({        location: {latitude: 44.443217, longitude: 26.04321099999993},        radius: 0,        enableAutocomplete: true,        inputBinding: {            latitudeInput: $('#addPlace-form-latitudine'),            longitudeInput: $('#addPlace-form-longitudine'),            locationNameInput: $('#addPlace-form-cauta')        }    });    $(document).on('shown.bs.modal', '#modal-addPlace', function () {        $('#location-picker').locationpicker('autosize');    });    $(window).on('shown.webui.popover', function () {        window.initializeMap(latitude, longitude)    });    $(window).on('hidden.webui.popover', function () {        $('#map-canvas-container').remove();    });});