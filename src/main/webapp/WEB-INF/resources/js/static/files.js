var fileTree;var fileDisplay = $('#file-display');var rMenu;var humanReadableSize = function (sizeInBytes) {    var readableSize;    if (sizeInBytes < 1024) {        readableSize = sizeInBytes + ' Bytes';    } else if (sizeInBytes < 1048576) {        readableSize = Math.round(sizeInBytes / 1024) + ' KB';    } else if (sizeInBytes < 1073741824) {        readableSize = Math.round(sizeInBytes / 1048576) + ' MB';    } else {        readableSize = Math.round(sizeInBytes / 1073741824) + ' GB'    }    return readableSize;};var displayFile = function (event, treeId, treeNode, clickFlag) {    if (treeNode.isParent) {        fileDisplay.html(EMPTY);        $.each(treeNode.children, function (index, child) {            fileDisplay.append('<tr><td>' + (index + 1) + ' </td><td><a href="' + child.url + '">' + child.name + '</a></td><td>' + humanReadableSize(child.size) + '</td></tr>');        });    } else {        var index = 0;        fileDisplay.append('<tr><td>' + (index + 1) + ' </td><td><a href="' + treeNode.url + '">' + treeNode.name + '</a></td><td>' + humanReadableSize(treeNode.size) + '</td></tr>');    }};var contextMenu = function (event, treeId, treeNode) {    if (!treeNode && event.target.tagName.toLowerCase() !== "button" && $(event.target).parents("a").length === 0) {        fileTree.cancelSelectedNode();        showRMenu("root", event.pageX, event.pageY - 55);    } else if (treeNode) {        fileTree.selectNode(treeNode);        showRMenu("node", event.pageX, event.pageY - 55);    }};var showRMenu = function (type, x, y) {    if (type == "root") {        $("#m_del").hide();        $("#m_edit").hide();    } else {        $("#m_del").show();        $("#m_edit").show();    }    rMenu.css({"top": y + "px", "left": x + "px"});    $("#rMenu").fadeIn(80);    $(document).bind("mousedown", onBodyMouseDown);};var hideRMenu = function () {    if (rMenu) {        rMenu.fadeOut(40);    }    $(document).unbind("mousedown", onBodyMouseDown);};var onBodyMouseDown = function (event) {    if (!(event.target.id === "rMenu" || $(event.target).parents("#rMenu").length > 0)) {        rMenu.css({"display": "none"});    }};var removeTreeNode = function () {    hideRMenu();    var nodes = fileTree.getSelectedNodes();    if (nodes && nodes.length > 0) {        if (nodes[0].children && nodes[0].children.length > 0) {            var msg = "If you delete this node will be deleted along with sub-nodes. \n\nPlease confirm!";            if (confirm(msg) == true) {                fileTree.removeNode(nodes[0]);            }        } else {            fileTree.removeNode(nodes[0]);        }    }};var editTreeNode = function () {    hideRMenu();    var nodes = fileTree.getSelectedNodes();    if (nodes && nodes.length > 0) {        fileTree.editName(nodes[0]);    }};var treeSettings = {    view: {        expandSpeed: "",        selectedMulti: false    },    async: {        enable: true,        type: 'get',        url: "/app/secure/files/list-files",        autoParam: ["id", "name", "level", "size"],        otherParam: {"otherParam": "zTreeAsyncTest"}    },    data: {        keep: {            leaf: true,            parent: true        }    },    edit: {        enable: true,        nameIsHTML: true,        editNameSelectAll: true,        showRemoveBtn: false,        showRenameBtn: false    },    callback: {        onClick: displayFile,        onRightClick: contextMenu    }};$(document).ready(function () {    $('#files').addClass('active');    fileTree = $.fn.zTree.init($("#file-tree"), treeSettings);    rMenu = $("#rMenu");});